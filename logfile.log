{"level":"info","message":"Listening on port 3000...","timestamp":"2023-01-28T14:27:46.355Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2023-01-28T14:27:46.406Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-01-28T14:28:10.316Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2023-01-28T14:28:10.373Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-01-28T14:28:33.150Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2023-01-28T14:28:33.198Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-01-28T14:29:37.178Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2023-01-28T14:29:37.219Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2023-01-28T14:31:43.265Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-01-28T14:32:25.417Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2023-01-28T14:32:25.456Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-01-28T14:33:34.562Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly...","timestamp":"2023-01-28T14:33:34.618Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-01-28T14:35:49.899Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2023-01-28T14:35:49.951Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-01-28T14:37:05.653Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2023-01-28T14:37:05.702Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-01-28T14:38:42.593Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2023-01-28T14:38:42.637Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-01-28T14:38:56.805Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2023-01-28T14:38:56.850Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-01-28T14:40:04.649Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2023-01-28T14:40:04.683Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-01-28T14:42:50.841Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2023-01-28T14:42:50.886Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-01-28T14:45:53.061Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2023-01-28T14:45:53.135Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-01-28T14:46:48.744Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2023-01-28T14:46:48.783Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-01-28T14:47:45.716Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2023-01-28T14:47:45.747Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-01-28T14:51:24.384Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2023-01-28T14:51:24.417Z"}
{"message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at model.Query.exec (C:\\Users\\Peter Ly\\Desktop\\FutureProof\\post-fp\\vanillaJS\\vidly\\node_modules\\mongoose\\lib\\query.js:4498:21)\n    at model.Query.Object.<anonymous>.Query.then (C:\\Users\\Peter Ly\\Desktop\\FutureProof\\post-fp\\vanillaJS\\vidly\\node_modules\\mongoose\\lib\\query.js:4592:15)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"valueType":"string","level":"error","timestamp":"2023-01-28T14:51:24.525Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-01-28T14:54:14.185Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2023-01-28T14:54:14.219Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-01-28T14:55:48.302Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2023-01-28T14:55:48.328Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-01-28T14:56:43.698Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2023-01-28T14:56:43.735Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-01-28T14:58:01.739Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2023-01-28T14:58:01.781Z"}
{"message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at model.Query.exec (C:\\Users\\Peter Ly\\Desktop\\FutureProof\\post-fp\\vanillaJS\\vidly\\node_modules\\mongoose\\lib\\query.js:4498:21)\n    at model.Query.Object.<anonymous>.Query.then (C:\\Users\\Peter Ly\\Desktop\\FutureProof\\post-fp\\vanillaJS\\vidly\\node_modules\\mongoose\\lib\\query.js:4592:15)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"valueType":"string","level":"error","timestamp":"2023-01-28T14:58:01.924Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-01-28T14:58:57.138Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2023-01-28T14:58:57.181Z"}
{"message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at model.Query.exec (C:\\Users\\Peter Ly\\Desktop\\FutureProof\\post-fp\\vanillaJS\\vidly\\node_modules\\mongoose\\lib\\query.js:4498:21)\n    at model.Query.Object.<anonymous>.Query.then (C:\\Users\\Peter Ly\\Desktop\\FutureProof\\post-fp\\vanillaJS\\vidly\\node_modules\\mongoose\\lib\\query.js:4592:15)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"valueType":"string","level":"error","timestamp":"2023-01-28T14:58:57.329Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-01-28T14:59:33.867Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2023-01-28T14:59:33.909Z"}
{"message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at model.Query.exec (C:\\Users\\Peter Ly\\Desktop\\FutureProof\\post-fp\\vanillaJS\\vidly\\node_modules\\mongoose\\lib\\query.js:4498:21)\n    at model.Query.Object.<anonymous>.Query.then (C:\\Users\\Peter Ly\\Desktop\\FutureProof\\post-fp\\vanillaJS\\vidly\\node_modules\\mongoose\\lib\\query.js:4592:15)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"valueType":"string","level":"error","timestamp":"2023-01-28T14:59:34.096Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-01-28T14:59:40.832Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2023-01-28T14:59:40.860Z"}
{"message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at model.Query.exec (C:\\Users\\Peter Ly\\Desktop\\FutureProof\\post-fp\\vanillaJS\\vidly\\node_modules\\mongoose\\lib\\query.js:4498:21)\n    at model.Query.Object.<anonymous>.Query.then (C:\\Users\\Peter Ly\\Desktop\\FutureProof\\post-fp\\vanillaJS\\vidly\\node_modules\\mongoose\\lib\\query.js:4592:15)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"valueType":"string","level":"error","timestamp":"2023-01-28T14:59:41.018Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-01-28T15:00:10.799Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2023-01-28T15:00:10.837Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-01-28T15:00:21.015Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2023-01-28T15:00:21.053Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-01-28T15:21:19.085Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2023-01-28T15:21:19.220Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-01-28T15:24:20.241Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2023-01-28T15:24:20.273Z"}
{"code":"ERR_HTTP_HEADERS_SENT","level":"error","timestamp":"2023-01-28T15:24:20.530Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-01-28T15:25:12.351Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2023-01-28T15:25:12.382Z"}
{"code":"ERR_HTTP_HEADERS_SENT","level":"error","timestamp":"2023-01-28T15:25:12.544Z"}
